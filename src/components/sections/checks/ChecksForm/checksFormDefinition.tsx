import {
  FlattenKeys,
  IFormDefinition,
} from "@/components/shared/RHFFormBuilder/types";
import { ChecksFormPayload } from "./ChecksFormPayload";

export const getChecksFormDefinition = ({
  addEvaluationBtn,
  removeEvaluationBtn,
  evaluationsCount,
}: {
  addEvaluationBtn: React.ReactNode;
  removeEvaluationBtn: (index: number) => React.ReactNode;
  evaluationsCount: number;
}): IFormDefinition<FlattenKeys<ChecksFormPayload>> => {
  const baseDefinition = [
    {
      type: "typography",
      label: "Request",
      id: "request",
      className: "col-span-12 mt-4",
      inputProps: {
        className: "text-md font-medium text-white",
      },
      visible: true,
    },
    {
      type: "textfield",
      icon: "mdi:identifier",
      requiredFieldSymbol: true,
      name: "request_id",
      id: "request_id",
      label: "Request ID",
      labelId: "request_id",
      visible: true,
      className: "col-span-12 md:col-span-6 md:mr-3",
    },
    {
      type: "typography",
      label: "Subject",
      id: "subject",
      className: "col-span-12 mt-4",
      inputProps: {
        className: "text-md font-medium text-white",
      },
      visible: true,
    },
    {
      type: "textfield",
      icon: "mdi:format-list-bulleted-type",
      requiredFieldSymbol: true,
      name: "subject.type",
      id: "subject.type",
      label: "Type",
      labelId: "subject.type",
      visible: true,
      group: "subject_left_column",
      groupClassName: "col-span-12 md:col-span-6 flex flex-col gap-4",
      parentGroup: "subject",
      parentGroupClassName: "col-span-12 grid grid-cols-12 gap-4",
    },
    {
      type: "textfield",
      icon: "mdi:identifier",
      requiredFieldSymbol: true,
      name: "subject.id",
      id: "subject.id",
      label: "ID",
      labelId: "subject.id",
      visible: true,
      group: "subject_left_column",
      parentGroup: "subject",
    },
    {
      type: "textfield",
      icon: "mdi:database-export",
      requiredFieldSymbol: true,
      name: "subject.source",
      id: "subject.source",
      label: "Source",
      labelId: "subject.source",
      visible: true,
      group: "subject_left_column",
      parentGroup: "subject",
    },
    {
      type: "code",
      name: "subject.properties",
      id: "subject.properties",
      requiredFieldSymbol: true,
      label: "Properties",
      labelId: "subject.properties",
      height: "200px",
      language: "json",
      visible: true,
      groupClassName: "col-span-12 md:col-span-6",
      group: "subject_right_column",
      parentGroup: "subject",
    },
    {
      type: "typography",
      label: "Context",
      id: "context",
      className: "col-span-12 mt-4",
      inputProps: {
        className: "text-md font-medium text-white",
      },
      visible: true,
    },
    {
      type: "textfield",
      icon: "mdi:clock-outline",
      requiredFieldSymbol: true,
      name: "context.time",
      id: "context.time",
      label: "Time",
      labelId: "context.time",
      visible: true,
      parentGroup: "context",
      parentGroupClassName: "col-span-12 grid grid-cols-12 gap-4",
    },
    {
      type: "checkbox",
      requiredFieldSymbol: true,
      name: "context.isSubscriptionActive",
      id: "context.isSubscriptionActive",
      label: "Is subscription active",
      labelId: "context.isSubscriptionActive",
      visible: true,
      className:
        "col-span-12 md:col-span-6 flex items-end pb-2 md:pl-10 select-none",
      parentGroup: "context",
    },
    {
      type: "typography",
      label: "Evaluations",
      id: "evaluations",
      className: "col-span-12 flex gap-12 mt-4",
      inputProps: {
        className: "text-md font-medium text-white",
      },
      visible: true,
      additionalContent: addEvaluationBtn,
    },

    ...Array.from({ length: evaluationsCount })
      .map((_, index) => [
        {
          type: "textfield",
          icon: "mdi:identifier",
          requiredFieldSymbol: true,
          name: `evaluations[${index}].request_id`,
          id: `evaluations[${index}].request_id`,
          label: "Request ID",
          labelId: `evaluations[${index}].request_id`,
          visible: true,
          parentGroup: `evaluations[${index}]`,
          parentGroupClassName:
            "p-4 border border-white/10 rounded-md grid grid-cols-12 gap-4 col-span-12 relative",
          group: `evaluations[${index}].request_id`,
          groupClassName: "col-span-12 grid grid-cols-12 gap-4",
          additionalContent: removeEvaluationBtn(index),
          className: "col-span-12 md:col-span-6 flex flex-col-reverse",
        },
        {
          type: "typography",
          label: "Resource",
          id: `evaluations[${index}].resource`,
          className: "col-span-12 mt-4",
          inputProps: {
            className: "text-md font-medium text-white",
          },
          visible: true,
          parentGroup: `evaluations[${index}]`,
          group: `evaluations[${index}].resource`,
          groupClassName:
            "col-span-12 md:col-span-6 flex flex-col gap-4 md:mr-3",
        },
        {
          type: "textfield",
          icon: "mdi:format-list-bulleted-type",
          requiredFieldSymbol: true,
          name: `evaluations[${index}].resource.type`,
          id: `evaluations[${index}].resource.type`,
          label: "Type",
          labelId: `evaluations[${index}].resource.type`,
          visible: true,
          group: `evaluations[${index}].resource`,
          parentGroup: `evaluations[${index}]`,
        },
        {
          type: "textfield",
          icon: "mdi:identifier",
          requiredFieldSymbol: true,
          name: `evaluations[${index}].resource.id`,
          id: `evaluations[${index}].resource.id`,
          label: "ID",
          labelId: `evaluations[${index}].resource.id`,
          visible: true,
          group: `evaluations[${index}].resource`,
          parentGroup: `evaluations[${index}]`,
        },
        {
          type: "code",
          name: `evaluations[${index}].resource.properties`,
          id: `evaluations[${index}].resource.properties`,
          requiredFieldSymbol: true,
          label: "Properties",
          labelId: `evaluations[${index}].resource.properties`,
          height: "200px",
          language: "json",
          visible: true,
          group: `evaluations[${index}].resource`,
          parentGroup: `evaluations[${index}]`,
        },
        {
          type: "typography",
          label: "Action",
          id: "action",
          className: "col-span-12 mt-4",
          inputProps: {
            className: "text-md font-medium text-white",
          },
          visible: true,
          parentGroup: `evaluations[${index}]`,
          group: `evaluations[${index}].action`,
          groupClassName:
            "col-span-12 md:col-span-6 flex flex-col gap-4 md:ml-3",
        },
        {
          type: "textfield",
          icon: "icon-park-outline:edit-name",
          requiredFieldSymbol: true,
          name: `evaluations[${index}].action.name`,
          id: `evaluations[${index}].action.name`,
          label: "Name",
          labelId: `evaluations[${index}].action.name`,
          visible: true,
          parentGroup: `evaluations[${index}]`,
          group: `evaluations[${index}].action`,
        },
        {
          type: "code",
          name: `evaluations[${index}].action.properties`,
          id: `evaluations[${index}].action.properties`,
          requiredFieldSymbol: true,
          label: "Properties",
          labelId: `evaluations[${index}].action.properties`,
          height: "200px",
          language: "json",
          visible: true,
          parentGroup: `evaluations[${index}]`,
          group: `evaluations[${index}].action`,
          className: "col-span-12 mt-auto",
        },
      ])
      .flat(2),
  ].filter(Boolean) as IFormDefinition<FlattenKeys<ChecksFormPayload>>;

  return baseDefinition;
};
